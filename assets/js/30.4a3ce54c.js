(window.webpackJsonp=window.webpackJsonp||[]).push([[30],{401:function(v,_,t){"use strict";t.r(_);var s=t(25),e=Object(s.a)({},(function(){var v=this,_=v.$createElement,t=v._self._c||_;return t("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[t("h1",{attrs:{id:"chrome调试"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#chrome调试"}},[v._v("#")]),v._v(" chrome调试")]),v._v(" "),t("p"),t("div",{staticClass:"table-of-contents"},[t("ul",[t("li",[t("a",{attrs:{href:"#一、基本的调试快捷键"}},[v._v("一、基本的调试快捷键")])]),t("li",[t("a",{attrs:{href:"#二、调试步骤："}},[v._v("二、调试步骤：")])]),t("li",[t("a",{attrs:{href:"#三、js语句函数断点的技巧，"}},[v._v("三、js语句函数断点的技巧，")])])])]),t("p"),v._v(" "),t("h2",{attrs:{id:"一、基本的调试快捷键"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#一、基本的调试快捷键"}},[v._v("#")]),v._v(" 一、基本的调试快捷键")]),v._v(" "),t("ul",[t("li",[v._v("F8 Resume 执行到下一断点")]),v._v(" "),t("li",[v._v("F9 step 单步执行下一行的语句（是会进入到函数内部的一步一步，通常过于细致）")]),v._v(" "),t("li",[v._v("F10 step over next function call，与F9类似，但是是执行到下一个function，会跳过函数的内部流程，执行下一步。")]),v._v(" "),t("li",[v._v("F11 step into next function，是会进入异步函数，f9的step会忽略异步")]),v._v(" "),t("li",[v._v("shift + F11 ：step out 会执行到当前函数的最后一行，有这个 就很少用f9。")])]),v._v(" "),t("p",[v._v("另外两个，分别是忽视/启用所有断点， 忽视/启用内部错误")]),v._v(" "),t("h2",{attrs:{id:"二、调试步骤："}},[t("a",{staticClass:"header-anchor",attrs:{href:"#二、调试步骤："}},[v._v("#")]),v._v(" 二、调试步骤：")]),v._v(" "),t("ol",[t("li",[v._v("如果一眼知道出错代码的位置，可以直接打断点。")]),v._v(" "),t("li",[v._v("感觉也挺凌乱的话，可以监听可能出错的事件，借助"),t("strong",[v._v("Event")]),v._v(" "),t("strong",[v._v("Listener")]),v._v(" "),t("strong",[v._v("breakpoints")]),v._v("下旋转，比如mouse的"),t("strong",[v._v("clicck")]),v._v("，"),t("strong",[v._v("键盘事件")]),v._v("，定时器事件等")]),v._v(" "),t("li",[v._v("继续运行，通常会出现某个函数被断点卡住。")]),v._v(" "),t("li",[v._v("可以在该函数尾部打上断点，执行"),t("strong",[v._v("f8")]),v._v("，此时查看一下各个"),t("strong",[v._v("数据")]),v._v("或者"),t("strong",[v._v("页面")]),v._v("是否as excepted")]),v._v(" "),t("li",[v._v("如预期所料的话，那就跳出该函数直接得到该函数的返回结果，按F10。不是的话，肯定就是该函数内某一步骤出错，或者该函数内调用的出错。需要刷新，进入出错的调用函数内查看。")]),v._v(" "),t("li",[v._v("如果调用的函数过长，通常不会直接在尾部直接上断点，可以执行f9 单步查看 或者f11进入内部调用的函数查看。")]),v._v(" "),t("li",[v._v("f11进来的函数发现很短没啥问题，可以shift + f11跳出当前函数。")])]),v._v(" "),t("p",[v._v("右侧的"),t("strong",[v._v("watch")]),v._v("区域：可以添加需要监听的变量，对象，以便实时的查看其值，记录变量变化情况")]),v._v(" "),t("p",[v._v("call stack 展示了调用栈：当前时刻，被哪些函数一层一层的调用。")]),v._v(" "),t("p",[t("strong",[v._v("Scope")]),v._v(" 当前的作用域：会展示出当前作用域中的变量，有"),t("strong",[v._v("local")]),v._v("、"),t("strong",[v._v("global")]),v._v("两类")]),v._v(" "),t("h4",{attrs:{id:"_2-1-断点的一些高效位置设置："}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-断点的一些高效位置设置："}},[v._v("#")]),v._v(" 2.1 断点的一些高效位置设置：")]),v._v(" "),t("ol",[t("li",[t("p",[v._v("代码中的具体行断点，我们清楚那块code有问题。")])]),v._v(" "),t("li",[t("p",[v._v("添加一些代码"),t("strong",[v._v("条件判断")]),v._v("的断点，很可能是由变量不同值导致的问题。")])]),v._v(" "),t("li",[t("p",[v._v("dom操作相关处，例如增删移动dom节点")])]),v._v(" "),t("li",[t("p",[v._v("XMLHttpRequest请求，尤其是含参数的请求，去看看是否参数有误。")])]),v._v(" "),t("li",[t("p",[v._v("利用"),t("strong",[v._v("事件监听")]),v._v("，例如click")])]),v._v(" "),t("li",[t("p",[v._v("函数中我们设置异常抛出的地方。")])]),v._v(" "),t("li",[t("p",[v._v("特定的"),t("strong",[v._v("函数")]),v._v("触发。")])])]),v._v(" "),t("h4",{attrs:{id:"_2-2与上方的断点位置一一对应："}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-2与上方的断点位置一一对应："}},[v._v("#")]),v._v(" 2.2与上方的断点位置一一对应：")]),v._v(" "),t("p",[v._v("1 有两种方式，f12后设置断点，或则代码里直接写debugger")]),v._v(" "),t("p",[v._v("2 f12后，右键添加conditional line of code，写一些简单表达式来检查下变量的值，类型e.g.")]),v._v(" "),t("p",[v._v("3 那就是打开elements去选对应元素右键，有一个break on选项，可以在subtree modifications，attribute modifications，node removal时触发")]),v._v(" "),t("p",[v._v("4 xhr请求，右侧的XHR/fetch Breakpoints里添加我们想要包含的请求参数，自然会在该请求发起时产生断点")]),v._v(" "),t("p",[v._v("5 事件监听，对应事件触发")]),v._v(" "),t("p",[v._v("6 异常触发，通常为我们代码里写的throw主动触发")]),v._v(" "),t("p",[v._v("7 debug(fun)")]),v._v(" "),t("h2",{attrs:{id:"三、js语句函数断点的技巧，"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#三、js语句函数断点的技巧，"}},[v._v("#")]),v._v(" 三、js语句函数断点的技巧，")]),v._v(" "),t("p",[v._v("如果和某个fun无关，则利用 step over跳过该fun即可 f10")]),v._v(" "),t("p",[v._v("与该fun相关，利用step into查看 f11")]),v._v(" "),t("p",[v._v("当进入该方法查看后，觉得与该方法无关，可以再利用step out跳出该方法 shift + f11")]),v._v(" "),t("p",[v._v("右侧有函数的调用栈，可以右键选对应的函数执行restart frame，即可重新执行到未调用该函数的时刻")]),v._v(" "),t("p",[v._v("认为无关的js，我们可以右键添加到ignore list去忽视一下，慎用")]),v._v(" "),t("p",[v._v("scope可以查看闭包 全局变量")]),v._v(" "),t("p",[v._v("ctrl + shift + p 是devtools的快捷键，打开输入想去的区域名称即可快速到达。")])])}),[],!1,null,null,null);_.default=e.exports}}]);