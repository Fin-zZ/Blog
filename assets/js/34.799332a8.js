(window.webpackJsonp=window.webpackJsonp||[]).push([[34],{405:function(t,s,a){"use strict";a.r(s);var n=a(25),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"跨域问题"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#跨域问题"}},[t._v("#")]),t._v(" 跨域问题")]),t._v(" "),a("h2",{attrs:{id:"前端调用后端api接口时，涉及到跨域问题cors"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#前端调用后端api接口时，涉及到跨域问题cors"}},[t._v("#")]),t._v(" 前端调用后端api接口时，涉及到跨域问题CORS")]),t._v(" "),a("p",[t._v("跨域资源共享("),a("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Glossary/CORS",target:"_blank",rel:"noopener noreferrer"}},[t._v("CORS"),a("OutboundLink")],1),t._v(") 是一种机制，允许运行在一个 origin (domain) 上的浏览器，被准许访问不同源的服务器上的资源。")]),t._v(" "),a("p",[t._v("当一个资源从与该资源本身所在的服务器"),a("strong",[t._v("不同的域、协议或端口")]),t._v("请求一个资源时，资源会发起一个"),a("strong",[t._v("跨域 HTTP 请求")]),t._v("。")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("URI")]),t._v(" "),a("th"),t._v(" "),a("th",[t._v("changeOrigin")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("http://www.cnblogs.com/a.js"),a("br"),t._v("http://www.a.com/b.js")]),t._v(" "),a("td",[t._v("不同域名")]),t._v(" "),a("td",[t._v("是")])]),t._v(" "),a("tr",[a("td",[t._v("http://www.a.com/lab/a.js"),a("br"),t._v("http://www.a.com/script/b.js")]),t._v(" "),a("td",[t._v("同域名下不同文件")]),t._v(" "),a("td",[t._v("否")])]),t._v(" "),a("tr",[a("td",[t._v("http://www.a.com:8000/a.js"),a("br"),t._v("http://www.a.com/b.js")]),t._v(" "),a("td",[t._v("不同端口（port）")]),t._v(" "),a("td",[t._v("是")])]),t._v(" "),a("tr",[a("td",[t._v("http://www.a.com/a.js"),a("br"),t._v("https://www.a.com/b.js")]),t._v(" "),a("td",[t._v("同域名 不同协议")]),t._v(" "),a("td",[t._v("是")])])])]),t._v(" "),a("p",[t._v("一般的跨域问题直接修改"),a("code",[t._v("vue.config.js")]),t._v(" 的 "),a("code",[t._v("devServer")]),t._v(" 的"),a("code",[t._v("proxy")]),t._v(" 选项即可，无需设置下方的"),a("code",[t._v("onProxyReq")]),t._v("选项。该选项是为了跳过登录验证，使得修改端口后访问接口时能携带"),a("code",[t._v("cookie")]),t._v("。")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("//vue.config.js\ndevServer: {\n    host: '0.0.0.0',\n    port: 8080,\n    proxy: {\n      '/api': {\n        target: 'https://kb.bcjgy.com/api', // 设置调用的接口域名和端口\n        changeOrigin: true, // 是否跨域\n        ws: true,\n        onProxyReq(proxyReq, req, res) {\n          const cookie = 'TGC=TGT-XXXXXXXXXXXXXXXXXX;';\n          proxyReq.setHeader('Cookie', cookie);\n        },\n        pathRewrite: {\n          '/api': ''\n        }\n      }\n    }\n  }\n")])])]),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//main.js")]),t._v("\nLsui"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Request"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("setDefaults")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//这里设置baseurl为 '/api' 就行，也就是proxy下的pathRewrite中的 '/api'")]),t._v("\n  baseURL"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'/api'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  method"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'post'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\t \n  timeOut"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("6000")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("如果是未封装axios")]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//路径从 /api 开始写就行")]),t._v("\naxios"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("get")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'/api/getDataPoint'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("then")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("res")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("res"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[t._v("然后在结合具体的请求设置不同路径")]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* global Vue */")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("export")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("default")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getPicture")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Vue")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("$request")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'/knowledge/listTreeType'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'get'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("这是请求知识库出来的页面，请求的接口如下：")]),t._v(" "),a("p",[a("code",[t._v("https://kb.bcjgy.com/api/knowledge/listTreeType")])]),t._v(" "),a("p",[t._v("直接请求的话，一是会发生跨域问题，二是没有登录，需要登录权限。")]),t._v(" "),a("p",[a("img",{attrs:{src:"C:%5CUsers%5Cfscut%5CAppData%5CLocal%5CTemp%5C%E4%BC%81%E4%B8%9A%E5%BE%AE%E4%BF%A1%E6%88%AA%E5%9B%BE_1591144709325.png",alt:"img"}})]),t._v(" "),a("p",[t._v("再看请求的接口，虽然控制台仍旧显示原来的本地路径，但实际请求已经代理到"),a("code",[t._v("https://kb.bcjgy.com/api/knowledge/listTreeType")])]),t._v(" "),a("p",[a("img",{attrs:{src:"C:%5CUsers%5Cfscut%5CAppData%5CLocal%5CTemp%5C%E4%BC%81%E4%B8%9A%E5%BE%AE%E4%BF%A1%E6%88%AA%E5%9B%BE_15911446824242.png",alt:"img"}})]),t._v(" "),a("p",[t._v("请求到的数据：")]),t._v(" "),a("p",[a("img",{attrs:{src:"C:%5CUsers%5Cfscut%5CAppData%5CLocal%5CTemp%5C%E4%BC%81%E4%B8%9A%E5%BE%AE%E4%BF%A1%E6%88%AA%E5%9B%BE_15911446985228.png",alt:"img"}})]),t._v(" "),a("h2",{attrs:{id:"vue-cli生成的配置文件上的proxy"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#vue-cli生成的配置文件上的proxy"}},[t._v("#")]),t._v(" "),a("code",[t._v("vue-cli")]),t._v("生成的配置文件上的"),a("code",[t._v("proxy")])]),t._v(" "),a("p",[t._v("事实上在运行的时候，会配置启动一个"),a("code",[t._v("node")]),t._v("服务，这个服务的作用")]),t._v(" "),a("ol",[a("li",[a("p",[t._v("是静态文件服务，可以访问到"),a("code",[t._v("html/js")]),t._v("等文件包括监听文件变动等，")])]),t._v(" "),a("li",[a("p",[t._v("是启动一个http代理，js发送的请求会请求到这个服务器A，由服务器A代理到服务器B，而服务器A和静态文件服务器是同源的，并不影响同源策略。")])])]),t._v(" "),a("p",[t._v("而服务器和服务器之间没有跨域这一说法，所以就能返回数据，不需要再本地搭建后端。")])])}),[],!1,null,null,null);s.default=e.exports}}]);